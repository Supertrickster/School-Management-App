@model SchoolManagementApp.MVC.Models.StudentListViewModel

@{
    ViewData["Title"] = "Student Dashboard";
    // Helper function to calculate age
    Func<DateTime?, int?> GetAge = dob =>
    {
        if (!dob.HasValue) return null;
        var today = DateTime.Today;
        var age = today.Year - dob.Value.Year;
        if (dob.Value.Date > today.AddYears(-age)) age--;
        return age;
    };
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Students</li>
    </ol>
</nav>

<div class="card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h3 class="mb-0"><i class="fas fa-user-graduate me-2"></i>All Student Records</h3>
        <a asp-action="Create" class="btn btn-success"><i class="fas fa-plus me-2"></i>Add New Student</a>
    </div>
    <div class="card-body">
        <table id="studentsTable" class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Name</th>
                    <th>Date of Birth</th>
                    <th>Age</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Students)
                {
                    <tr id="student-row-@item.Id">
                        <td>
                            <div class="d-flex align-items-center">
                                <div class="avatar me-3">@(item.FirstName[0])@(item.LastName[0])</div>
                                <div>
                                    <div class="fw-bold">@item.FirstName @item.LastName</div>
                                    <div class="text-muted">student_id: @item.Id</div>
                                </div>
                            </div>
                        </td>
                        <td>
                            @(item.DateOfBirth.HasValue? item.DateOfBirth.Value.ToString("dd MMM, yyyy") : "N/A")
                        </td>
                        <td>
                            @{
                                var age = GetAge(item.DateOfBirth);
                            }
                            @(age.HasValue ? $"{age} years" : "N/A")
                        </td>
                        <td class="text-end">
                            <div class="btn-group" role="group">
                                <a class="btn btn-outline-primary btn-sm" asp-action="Details" asp-route-id="@item.Id" title="Details"><i class="fas fa-info-circle"></i></a>
                                <a class="btn btn-outline-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id" title="Edit"><i class="fas fa-pencil-alt"></i></a>
                                <button data-id="@item.Id" class="btn btn-outline-danger btn-sm deleteBtn" type="button" title="Delete"><i class="fas fa-trash-alt"></i></button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<form asp-action="Delete" id="studentDeleteForm" method="post">
    <input type="hidden" id="studentId" name="Id" />
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            // 1. Initialize the interactive DataTable
            var table = $('#studentsTable').DataTable({
                "columnDefs": [
                    { "orderable": false, "targets": 3 } // Disable sorting on 'Actions' column
                ]
            });

            // 2. Handle the delete button click
            $('#studentsTable').on('click', '.deleteBtn', function () {
                var id = $(this).data("id"); // Get the ID from the button

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // If confirmed, set the ID in the hidden form and submit it.
                        $('#studentId').val(id);
                        $('#studentDeleteForm').submit();
                    }
                });
            });
        });
    </script>
}