@model SchoolManagementApp.MVC.Models.ClassEnrollmentViewModel

@{
    ViewData["Title"] = "Manage Enrollments";
}

<div class="card shadow-sm">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h3 class="mb-0"><i class="fas fa-tasks me-2"></i>Manage Enrollments</h3>
                <p class="mb-0 text-muted">@Model.Class.CourseName (@Model.Class.Time) - Prof. @Model.Class.LecturerName</p>
            </div>
            <a asp-action="Index" class="btn btn-secondary"><i class="fas fa-arrow-left me-2"></i>Back to Classes</a>
        </div>
    </div>
    <div class="card-body">
        <p>Toggle the switch to enroll or unenroll a student from this class.</p>
        <table id="enrollmentTable" class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Student Name</th>
                    <th class="text-center">Is Enrolled?</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in Model.Students)
                {
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                <div class="avatar me-3">@(student.FirstName[0])@(student.LastName[0])</div>
                                <div>
                                    <div class="fw-bold">@student.FirstName @student.LastName</div>
                                    <div class="text-muted small">Student ID: @student.Id</div>
                                </div>
                            </div>
                        </td>
                        <td class="text-center">
                            <div class="form-check form-switch form-switch-lg d-inline-block">
                                <input class="form-check-input enrollment-toggle"
                                       type="checkbox"
                                       role="switch"
                                       data-studentid="@student.Id"
                                       @(student.IsEnrolled ? "checked" : "")>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<form asp-action="EnrollStudent" id="classEnrollmentForm" method="post">
    <input type="hidden" name="ClassId" value="@Model.Class.Id" />
    <input type="hidden" id="studentId" name="StudentId" />
    <input type="hidden" id="shouldEnroll" name="ShouldEnroll" />
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#enrollmentTable').DataTable({
                "columnDefs": [
                    { "orderable": false, "targets": 1 } // Disable sorting on the toggle column
                ]
            });

            $('.enrollment-toggle').on('change', function (e) {
                var toggle = $(this);
                var studentId = toggle.data("studentid");
                var shouldEnroll = toggle.is(":checked");
                var originalState = !shouldEnroll; // The state before the user clicked

                var actionText = shouldEnroll ? "enroll" : "unenroll";

                Swal.fire({
                    title: 'Are you sure?',
                    text: `Please confirm you want to ${actionText} this student.`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, Confirm'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // If confirmed, set values in the hidden form and submit
                        $('#studentId').val(studentId);
                        $('#shouldEnroll').val(shouldEnroll);
                        $('#classEnrollmentForm').submit();
                    } else {
                        // If cancelled, revert the toggle switch to its original state
                        toggle.prop('checked', originalState);
                    }
                });
            });
        });
    </script>
}